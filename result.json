{
  "schema_version": "0.4.0",
  "metadata": {
    "name": "near-abi-py",
    "version": "0.1.0",
    "authors": [
      "Unknown"
    ],
    "build": {
      "compiler": "python 3.12.8",
      "builder": "near-abi-py"
    }
  },
  "body": {
    "functions": [
      {
        "name": "batch_update",
        "kind": "call",
        "doc": "Batch update multiple tokens.\n\nArgs:\n    updates: List of (token_id, token_data) tuples\n\nReturns:\n    Dictionary of token_id to success status",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "updates",
              "type_schema": {
                "$defs": {
                  "AssetMetadata": {
                    "description": "Metadata for an asset",
                    "properties": {
                      "name": {
                        "title": "Name",
                        "type": "string"
                      },
                      "description": {
                        "title": "Description",
                        "type": "string"
                      },
                      "uri": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ],
                        "title": "Uri"
                      }
                    },
                    "required": [
                      "name",
                      "description",
                      "uri"
                    ],
                    "title": "AssetMetadata",
                    "type": "object"
                  },
                  "TokenData": {
                    "description": "Data for a token",
                    "properties": {
                      "owner_id": {
                        "title": "Owner Id",
                        "type": "string"
                      },
                      "metadata": {
                        "$ref": "#/$defs/AssetMetadata"
                      },
                      "royalty": {
                        "additionalProperties": {
                          "type": "number"
                        },
                        "title": "Royalty",
                        "type": "object"
                      }
                    },
                    "required": [
                      "owner_id",
                      "metadata",
                      "royalty"
                    ],
                    "title": "TokenData",
                    "type": "object"
                  }
                },
                "items": {
                  "maxItems": 2,
                  "minItems": 2,
                  "prefixItems": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/$defs/TokenData"
                    }
                  ],
                  "type": "array"
                },
                "type": "array"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "additionalProperties": {
              "type": "boolean"
            },
            "type": "object"
          }
        }
      },
      {
        "name": "complex_action",
        "kind": "call",
        "doc": "Perform a complex action with mixed types.\n\nArgs:\n    token_ids: Set of token IDs to process\n    options: Options for the action with various types\n    priority: Optional priority list\n\nReturns:\n    Results of the action",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token_ids",
              "type_schema": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "uniqueItems": true
              }
            },
            {
              "name": "options",
              "type_schema": {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "boolean"
                    }
                  ]
                },
                "type": "object"
              }
            },
            {
              "name": "priority",
              "type_schema": {
                "anyOf": [
                  {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ]
            },
            "type": "object"
          }
        }
      },
      {
        "name": "get_asset_type_options",
        "kind": "view",
        "doc": "Get allowed asset type values as a tuple.\n\nReturns:\n    Tuple of allowed asset type values",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        }
      },
      {
        "name": "get_asset_types",
        "kind": "view",
        "doc": "Get mapping of asset type codes to full types.\n\nReturns:\n    Dictionary of asset type codes to enum values",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$defs": {
              "AssetType": {
                "description": "Type of digital asset",
                "enum": [
                  "image",
                  "video",
                  "audio",
                  "model",
                  "other"
                ],
                "title": "AssetType",
                "type": "string"
              }
            },
            "additionalProperties": {
              "$ref": "#/$defs/AssetType"
            },
            "type": "object"
          }
        }
      },
      {
        "name": "get_collection_stats",
        "kind": "view",
        "doc": "Get collection statistics.\n\nArgs:\n    collection_id: The collection's identifier\n\nReturns:\n    Collection statistics",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "collection_id",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "properties": {
              "total_supply": {
                "default": 0,
                "title": "Total Supply",
                "type": "integer"
              },
              "num_owners": {
                "default": 0,
                "title": "Num Owners",
                "type": "integer"
              },
              "floor_price": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Floor Price"
              },
              "volume": {
                "default": "0",
                "title": "Volume",
                "type": "string"
              }
            },
            "title": "CollectionStats",
            "type": "object"
          }
        }
      },
      {
        "name": "get_owner_tokens",
        "kind": "view",
        "doc": "Get set of token IDs owned by an account.\n\nArgs:\n    owner_id: The owner's account ID\n\nReturns:\n    Set of token IDs",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "owner_id",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          }
        }
      },
      {
        "name": "get_royalty",
        "kind": "view",
        "doc": "Get royalty information for a token.\n\nArgs:\n    token_id: The token's unique identifier\n\nReturns:\n    Royalty information or None if not set",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$defs": {
              "RoyaltyInfo": {
                "properties": {
                  "percentage": {
                    "title": "Percentage",
                    "type": "number"
                  },
                  "beneficiary": {
                    "title": "Beneficiary",
                    "type": "string"
                  }
                },
                "required": [
                  "percentage",
                  "beneficiary"
                ],
                "title": "RoyaltyInfo",
                "type": "object"
              }
            },
            "anyOf": [
              {
                "$ref": "#/$defs/RoyaltyInfo"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      {
        "name": "get_sale_info",
        "kind": "view",
        "doc": "Get sale information for a token.\n\nArgs:\n    token_id: The token's unique identifier\n\nReturns:\n    Sale terms or None if not for sale",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$defs": {
              "SaleTerms": {
                "description": "Sale terms with optional fields",
                "properties": {
                  "price": {
                    "title": "Price",
                    "type": "string"
                  },
                  "is_auction": {
                    "title": "Is Auction",
                    "type": "boolean"
                  },
                  "min_bid": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Min Bid"
                  },
                  "end_time": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "End Time"
                  }
                },
                "title": "SaleTerms",
                "type": "object"
              }
            },
            "anyOf": [
              {
                "$ref": "#/$defs/SaleTerms"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      {
        "name": "get_supported_standards",
        "kind": "view",
        "doc": "Get supported token standards.\n\nReturns:\n    List of supported token standards",
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$defs": {
              "TokenStandard": {
                "description": "Token standard version",
                "enum": [
                  1,
                  2,
                  3
                ],
                "title": "TokenStandard",
                "type": "integer"
              }
            },
            "items": {
              "$ref": "#/$defs/TokenStandard"
            },
            "type": "array"
          }
        }
      },
      {
        "name": "get_token",
        "kind": "view",
        "doc": "Get token data by ID.\n\nArgs:\n    token_id: The token's unique identifier\n\nReturns:\n    The token data or None if not found",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "$defs": {
              "AssetMetadata": {
                "description": "Metadata for an asset",
                "properties": {
                  "name": {
                    "title": "Name",
                    "type": "string"
                  },
                  "description": {
                    "title": "Description",
                    "type": "string"
                  },
                  "uri": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Uri"
                  }
                },
                "required": [
                  "name",
                  "description",
                  "uri"
                ],
                "title": "AssetMetadata",
                "type": "object"
              },
              "TokenData": {
                "description": "Data for a token",
                "properties": {
                  "owner_id": {
                    "title": "Owner Id",
                    "type": "string"
                  },
                  "metadata": {
                    "$ref": "#/$defs/AssetMetadata"
                  },
                  "royalty": {
                    "additionalProperties": {
                      "type": "number"
                    },
                    "title": "Royalty",
                    "type": "object"
                  }
                },
                "required": [
                  "owner_id",
                  "metadata",
                  "royalty"
                ],
                "title": "TokenData",
                "type": "object"
              }
            },
            "anyOf": [
              {
                "$ref": "#/$defs/TokenData"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      {
        "name": "list_for_sale",
        "kind": "call",
        "doc": "List a token for sale.\n\nArgs:\n    token_id: Token ID to list for sale\n    terms: Sale terms\n\nReturns:\n    Success status",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "terms",
              "type_schema": {
                "description": "Sale terms with optional fields",
                "properties": {
                  "price": {
                    "title": "Price",
                    "type": "string"
                  },
                  "is_auction": {
                    "title": "Is Auction",
                    "type": "boolean"
                  },
                  "min_bid": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Min Bid"
                  },
                  "end_time": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "End Time"
                  }
                },
                "title": "SaleTerms",
                "type": "object"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "mint_token",
        "kind": "call",
        "doc": "Mint a new token.\n\nArgs:\n    token_id: Unique token identifier\n    owner_id: Token owner's account ID\n    metadata: Token metadata\n    asset_type: Type of digital asset\n    royalty: Optional royalty information\n\nReturns:\n    Success status",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "token_id",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "owner_id",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "metadata",
              "type_schema": {
                "description": "Metadata for an asset",
                "properties": {
                  "name": {
                    "title": "Name",
                    "type": "string"
                  },
                  "description": {
                    "title": "Description",
                    "type": "string"
                  },
                  "uri": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Uri"
                  }
                },
                "required": [
                  "name",
                  "description",
                  "uri"
                ],
                "title": "AssetMetadata",
                "type": "object"
              }
            },
            {
              "name": "asset_type",
              "type_schema": {
                "description": "Type of digital asset",
                "enum": [
                  "image",
                  "video",
                  "audio",
                  "model",
                  "other"
                ],
                "title": "AssetType",
                "type": "string"
              }
            },
            {
              "name": "royalty",
              "type_schema": {
                "$defs": {
                  "RoyaltyInfo": {
                    "properties": {
                      "percentage": {
                        "title": "Percentage",
                        "type": "number"
                      },
                      "beneficiary": {
                        "title": "Beneficiary",
                        "type": "string"
                      }
                    },
                    "required": [
                      "percentage",
                      "beneficiary"
                    ],
                    "title": "RoyaltyInfo",
                    "type": "object"
                  }
                },
                "anyOf": [
                  {
                    "$ref": "#/$defs/RoyaltyInfo"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "update_collection_stats",
        "kind": "call",
        "doc": "Update collection statistics.\n\nArgs:\n    collection_id: Collection identifier\n    stats: New statistics",
        "params": {
          "serialization_type": "json",
          "args": [
            {
              "name": "collection_id",
              "type_schema": {
                "type": "string"
              }
            },
            {
              "name": "stats",
              "type_schema": {
                "properties": {
                  "total_supply": {
                    "default": 0,
                    "title": "Total Supply",
                    "type": "integer"
                  },
                  "num_owners": {
                    "default": 0,
                    "title": "Num Owners",
                    "type": "integer"
                  },
                  "floor_price": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "default": null,
                    "title": "Floor Price"
                  },
                  "volume": {
                    "default": "0",
                    "title": "Volume",
                    "type": "string"
                  }
                },
                "title": "CollectionStats",
                "type": "object"
              }
            }
          ]
        },
        "result": {
          "serialization_type": "json",
          "type_schema": {
            "type": "null"
          }
        }
      }
    ],
    "root_schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "NEAR Contract Schema",
      "definitions": {
        "AccountId": {
          "type": "string",
          "description": "NEAR account identifier"
        },
        "Balance": {
          "type": "string",
          "description": "Balance value in yoctoNEAR",
          "pattern": "^[0-9]+$"
        },
        "Gas": {
          "type": "integer",
          "description": "Gas units for NEAR VM operations",
          "minimum": 0
        },
        "PublicKey": {
          "type": "string",
          "description": "Public key in base58 or base64 format"
        },
        "Promise": {
          "type": "object",
          "description": "NEAR Promise for async cross-contract calls"
        }
      }
    }
  }
}